generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Estudante {
  Cod_estudante Int           @id @default(autoincrement())
  Nome          String?
  Email         String?
  Senha         String?
  Instituicao   String?
  Telefone      String?
  notificacoes  Notificacao[]
  Curtido       Curtido[]
}

model Extracurriculares {
  id        Int      @id @default(autoincrement())
  nome      String
  descricao String?
  slug      String   @unique
  iconClass String // classe CSS do Ã­cone (ex.: "voluntariado--icon")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  atividades Atividade[]
}

model Atividade {
  id                Int               @id @default(autoincrement())
  titulo            String
  descricao         String
  imagem            String? // caminho do card (opcional)
  url               String? // link "saiba mais"
  extracurricularId Int
  extracurricular   Extracurriculares @relation(fields: [extracurricularId], references: [id])
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model Notificacao {
  Cod                    Int        @id @default(autoincrement())
  Descricao              String?
  Data_emissao           DateTime?
  Estudante              Estudante? @relation(fields: [estudanteCod_estudante], references: [Cod_estudante])
  estudanteCod_estudante Int?
}

model Professor {
  Cod_Professor Int     @id @default(autoincrement())
  Email         String?
  Nome          String?
  Senha         String?
}

model Postagens {
  id       Int      @id @default(autoincrement())
  autor    String
  conteudo String
  time     DateTime @default(now())

  Curtido Curtido[]
}

model Curtido {
  cod_estu Int
  id_post  Int

  estudante Estudante @relation(fields: [cod_estu], references: [Cod_estudante], onDelete: Cascade)
  postagem  Postagens @relation(fields: [id_post], references: [id], onDelete: Cascade)

  @@id([cod_estu, id_post])
}
